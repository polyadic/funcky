<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>preview</LangVersion>
        <Nullable>enable</Nullable>
        <AnalysisLevel>5</AnalysisLevel>
    </PropertyGroup>
    <PropertyGroup Label="Packing">
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
        <NoPackageAnalysis>true</NoPackageAnalysis>
    </PropertyGroup>
    <PropertyGroup Label="NuGet Metadata">
        <PackageId>Funcky.Analyzers</PackageId>
        <PackageVersionPrefix>1.4.1</PackageVersionPrefix>
        <Description>Analyzers to guide to the correct usage of Funcky.</Description>
        <PackageTags>funcky, analyzers, roslyn</PackageTags>
        <DevelopmentDependency>true</DevelopmentDependency>
        <PackageIcon>icon.png</PackageIcon>
        <PackageReadmeFile>package.md</PackageReadmeFile>
    </PropertyGroup>
    <ItemGroup>
        <ProjectReference Include="..\Funcky.Analyzers\Funcky.Analyzers.csproj" PackAsAnalyzer="true" />
        <ProjectReference Include="..\Funcky.Analyzers\Funcky.Analyzers.Roslyn4.0.csproj" PackAsAnalyzer="true" />
        <ProjectReference Include="..\Funcky.Analyzers.CodeFixes\Funcky.Analyzers.CodeFixes.csproj" PackAsAnalyzer="true" />
        <ProjectReference Include="..\Funcky.Analyzers.CodeFixes\Funcky.Analyzers.CodeFixes.Roslyn4.0.csproj" PackAsAnalyzer="true" />
    </ItemGroup>
    <ItemGroup>
        <None Include="package.md" Pack="true" PackagePath="\" />
        <None Include="..\..\Artwork\logo-red-rounded.png" Pack="true" PackagePath="\icon.png" Visible="false" />
    </ItemGroup>
    <ItemGroup>
        <None Update="tools\*.ps1" CopyToOutputDirectory="Always" Pack="true" PackagePath="" />
        <None Update="buildTransitive\$(PackageId).targets" Pack="true" PackagePath="%(Identity)" />
    </ItemGroup>
    <!-- Adapted from https://github.com/dotnet/runtime/blob/4bd597ffde128555b4ff017e87c60adc2fedd178/eng/packaging.targets#L136 -->
    <PropertyGroup>
        <BeforePack>$(BeforePack);IncludeAnalyzersInPackage</BeforePack>
    </PropertyGroup>
    <Target Name="IncludeAnalyzersInPackage"
            Condition="'@(ProjectReference)' != '' and @(ProjectReference->AnyHaveMetadataValue('PackAsAnalyzer', 'true'))">
        <MSBuild Projects="@(ProjectReference->WithMetadataValue('PackAsAnalyzer', 'true'))"
                 Targets="GetAnalyzerPackFiles"
                 RemoveProperties="SetTargetFramework">
            <Output TaskParameter="TargetOutputs" ItemName="_AnalyzerFile" />
        </MSBuild>

        <ItemGroup>
            <Content Include="@(_AnalyzerFile)" Pack="True" Condition="!%(_AnalyzerFile.IsSymbol)" />
            <!-- Symbols don't honor PackagePath.  By default they are placed in lib/%(TargetFramework).
                 Pack does honor TargetPath and does Path.Combine("lib/%(TargetFramework)", "%(TargetPath)"),
                 so a rooted path value for TargetPath will override lib.
                 https://github.com/NuGet/Home/issues/10860 -->
            <_TargetPathsToSymbols Include="@(_AnalyzerFile)" TargetPath="/%(_AnalyzerFile.PackagePath)" Condition="%(_AnalyzerFile.IsSymbol)" />
        </ItemGroup>
    </Target>
</Project>
