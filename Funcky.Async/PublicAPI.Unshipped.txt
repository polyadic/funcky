#nullable enable
Funcky.Async.Functional
Funcky.Async.Monads.AwaitableOptionExtensions
Funcky.Async.Monads.OptionTaskAwaiter<TItem>
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.GetResult() -> Funcky.Monads.Option<TItem>
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.IsCompleted.get -> bool
Funcky.Async.Monads.OptionTaskAwaiter<TItem>.OnCompleted(System.Action! continuation) -> void
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.GetResult() -> Funcky.Monads.Option<TItem>
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.IsCompleted.get -> bool
Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>.OnCompleted(System.Action! continuation) -> void
Funcky.AsyncSequence
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<decimal>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<double>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<float>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<int>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<long>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<decimal>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<double>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<float>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<int>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync(this System.Collections.Generic.IAsyncEnumerable<long>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<decimal>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<double>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<float>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<int>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<long>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, decimal>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, double>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, float>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, int>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, long>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<int>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<long>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<decimal>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<double>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<float>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<int>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<long>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<int>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<long>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<decimal>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<decimal>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<double>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<float>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<float>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<int>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.AverageOrNoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<long>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<double>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.Inspect<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Action<TSource>! action) -> System.Collections.Generic.IAsyncEnumerable<TSource>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.InspectAwait<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask>! action) -> System.Collections.Generic.IAsyncEnumerable<TSource>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, TResult>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<TSource>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TSource>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TSource>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAwaitAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAwaitAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAwaitWithCancellationAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MaxOrNoneAwaitWithCancellationAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, Funcky.Monads.Option<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, TResult>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<TSource>>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TSource>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TSource>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAwaitAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAwaitAsync<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAwaitWithCancellation<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.MinOrNoneAwaitWithCancellation<TSource, TResult>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<TResult>>! selector, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.ValueTask<Funcky.Monads.Option<TResult>>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WhereNotNull<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource?>! source) -> System.Collections.Generic.IAsyncEnumerable<TSource!>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WhereNotNull<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource?>! source) -> System.Collections.Generic.IAsyncEnumerable<TSource>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WhereSelect<TItem>(this System.Collections.Generic.IAsyncEnumerable<Funcky.Monads.Option<TItem>>! source) -> System.Collections.Generic.IAsyncEnumerable<TItem>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WithIndex<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source) -> System.Collections.Generic.IAsyncEnumerable<Funcky.Extensions.ValueWithIndex<TSource>>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WithLast<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source) -> System.Collections.Generic.IAsyncEnumerable<Funcky.Extensions.ValueWithLast<TSource>>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WithPrevious<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source) -> System.Collections.Generic.IAsyncEnumerable<Funcky.Extensions.ValueWithPrevious<TSource>>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.ZipLongest<TLeft, TRight, TResult>(this System.Collections.Generic.IAsyncEnumerable<TLeft>! left, System.Collections.Generic.IAsyncEnumerable<TRight>! right, System.Func<Funcky.DataTypes.EitherOrBoth<TLeft, TRight>, TResult>! resultSelector) -> System.Collections.Generic.IAsyncEnumerable<TResult>!
static Funcky.Async.Extensions.AsyncEnumerableExtensions.ZipLongest<TLeft, TRight>(this System.Collections.Generic.IAsyncEnumerable<TLeft>! left, System.Collections.Generic.IAsyncEnumerable<TRight>! right) -> System.Collections.Generic.IAsyncEnumerable<Funcky.DataTypes.EitherOrBoth<TLeft, TRight>>!
static Funcky.Async.Functional.NoOperationAsync() -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6, T7, T8>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6, T7>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5, T6>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4, T5>(T1 p1, T2 p2, T3 p3, T4 p4, T5 p5) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3, T4>(T1 p1, T2 p2, T3 p3, T4 p4) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2, T3>(T1 p1, T2 p2, T3 p3) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1, T2>(T1 p1, T2 p2) -> System.Threading.Tasks.Task!
static Funcky.Async.Functional.NoOperationAsync<T1>(T1 p1) -> System.Threading.Tasks.Task!
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter(this Funcky.Monads.Option<System.Threading.Tasks.Task!> option) -> System.Runtime.CompilerServices.TaskAwaiter
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter(this Funcky.Monads.Option<System.Threading.Tasks.ValueTask> option) -> System.Runtime.CompilerServices.ValueTaskAwaiter
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter<TItem>(this Funcky.Monads.Option<System.Threading.Tasks.Task<TItem>!> option) -> Funcky.Async.Monads.OptionTaskAwaiter<TItem>
static Funcky.Async.Monads.AwaitableOptionExtensions.GetAwaiter<TItem>(this Funcky.Monads.Option<System.Threading.Tasks.ValueTask<TItem>> option) -> Funcky.Async.Monads.OptionValueTaskAwaiter<TItem>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.NoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source) -> System.Threading.Tasks.ValueTask<bool>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.NoneAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, bool>! predicate) -> System.Threading.Tasks.ValueTask<bool>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.NoneAwaitAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.Tasks.ValueTask<bool>>! predicate) -> System.Threading.Tasks.ValueTask<bool>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.NoneAwaitWithCancellationAsync<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source, System.Func<TSource, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask<bool>>! predicate) -> System.Threading.Tasks.ValueTask<bool>
static Funcky.Async.Extensions.AsyncEnumerableExtensions.WithFirst<TSource>(this System.Collections.Generic.IAsyncEnumerable<TSource>! source) -> System.Collections.Generic.IAsyncEnumerable<Funcky.Extensions.ValueWithFirst<TSource>>!
static Funcky.AsyncSequence.Return<TItem>(TItem item) -> System.Collections.Generic.IAsyncEnumerable<TItem>!
